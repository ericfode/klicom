### Starting build.
# Target: toy.ml.depends, tags: { extension:ml, file:toy.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules toy.ml > toy.ml.depends # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, pp(camlp4of), quiet, traverse, user_camlp4 }
/usr/bin/ocamldep -pp camlp4of -modules lexer.ml > lexer.ml.depends
# Target: token.ml.depends, tags: { extension:ml, file:token.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules token.ml > token.ml.depends # cached
# Target: token.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:token.cmo, file:token.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I +llvm-2.8 -o token.cmo token.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, pp(camlp4of), quiet, traverse, user_camlp4 }
/usr/bin/ocamldep -pp camlp4of -modules parser.ml > parser.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I +llvm-2.8 -o ast.cmo ast.ml # cached
# Target: parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, pp(camlp4of), quiet, traverse, user_camlp4 }
/usr/bin/ocamlc -c -I +llvm-2.8 -pp camlp4of -o parser.cmo parser.ml # cached
# Target: toplevel.ml.depends, tags: { extension:ml, file:toplevel.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules toplevel.ml > toplevel.ml.depends # cached
# Target: codegen.ml.depends, tags: { extension:ml, file:codegen.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules codegen.ml > codegen.ml.depends # cached
# Target: codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I +llvm-2.8 -o codegen.cmo codegen.ml # cached
# Target: toplevel.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:toplevel.cmo, file:toplevel.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I +llvm-2.8 -o toplevel.cmo toplevel.ml # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, pp(camlp4of), quiet, traverse, user_camlp4 }
/usr/bin/ocamlc -c -I +llvm-2.8 -pp camlp4of -o lexer.cmo lexer.ml
# Target: toy.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:toy.cmo, file:toy.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I +llvm-2.8 -o toy.cmo toy.ml # cached
# Target: toy.byte, tags: { byte, dont_link_with, extension:byte, file:toy.byte, g++, link, ocaml, program, quiet, traverse, use_llvm, use_llvm_analysis }
/usr/bin/ocamlc -I +llvm-2.8 llvm.cma -I +llvm-2.8 llvm_analysis.cma -cc g++ token.cmo lexer.cmo ast.cmo parser.cmo codegen.cmo toplevel.cmo toy.cmo -o toy.byte
# Compilation successful.
